<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Vitor Reis Blog]]></title><description><![CDATA[This is my personal blog, where I share about the people I meet, the books I'm reading, and what I'm learning. I hope that you'll join the conversation.]]></description><link>https://vitorreis.com/</link><generator>RSS for Node</generator><lastBuildDate>Mon, 20 May 2019 19:45:11 GMT</lastBuildDate><item><title><![CDATA[A Practical guide to CD Java Applications]]></title><description><![CDATA[At JAX London a few weeks ago I attended the talk of @danielbryantuk about Continuous Delivery With Containers, where he gave a few samples…]]></description><link>https://vitorreis.com//a-practical-guide-to-cd-java-applications/</link><guid isPermaLink="false">https://vitorreis.com//a-practical-guide-to-cd-java-applications/</guid><pubDate>Thu, 19 Oct 2017 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;At JAX London a few weeks ago I attended the talk of &lt;a href=&quot;https://twitter.com/danielbryantuk&quot;&gt;@danielbryantuk&lt;/a&gt; about Continuous Delivery With Containers, where he gave a few samples of his book &lt;a href=&quot;https://www.nginx.com/resources/library/containerizing-continuous-delivery-java/&quot;&gt;Containerizing Continuous Delivery in Java&lt;/a&gt; (get a free copy on the link).&lt;/p&gt;
&lt;p&gt;The book it’s easy to read, thin and straight to the point, in 53 pages the author gives a small review/context about the topic there discussed, and demonstrates conceptually and practically how to implement a flow of continuous delivery of a java application using Docker as container technology and Jenkins as tool for automation of the flow, the book is not about how to write Dockerfiles for this purpose the author recommends &lt;a href=&quot;http://www.oreilly.com/programming/free/docker-for-java-developers.csp&quot;&gt;Docker for Java Developers&lt;/a&gt; (Also available for free in the link) from Arun Gupta. The author flags the questions and important concepts that you should consider while implementing such a flow, he raises our awareness on common mistakes but this is just the tip of the iceberg, it’s a nice starting point on the topic.&lt;/p&gt;
&lt;p&gt;In the real world, your company might be using other tools for continuous integration (e.g.: CircleCI, Travis) and you might have to adapt the proposed flow to the resources that your tool give to you, also if your cluster runs inside a VPN you may have to handle the security implications of your CI/CD tool connecting in the VPN. I felt that the author stopped in the “staging/test” environment, I missed comments about a pipeline/barrier mechanism for the production environment.&lt;/p&gt;
&lt;p&gt;Recommended read for who is considering to adopt this flow and don’t have nothing similar implemented yet.&lt;/p&gt;
&lt;p&gt;Kudos to the author for the useful &lt;a href=&quot;https://github.com/danielbryantuk/oreilly-docker-java-shopping&quot;&gt;open source repository&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building Scalable APIs with AWS API Gateway]]></title><description><![CDATA[Originally published at foodora/foodpanda tech blogWe strongly believe that is important to keep up to date in our tech stack and be close…]]></description><link>https://vitorreis.com//building-scalable-apis-with-aws-api-gateway/</link><guid isPermaLink="false">https://vitorreis.com//building-scalable-apis-with-aws-api-gateway/</guid><pubDate>Fri, 16 Sep 2016 22:12:03 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;Originally published at &lt;a href=&quot;https://tech.foodora.com/building-scalable-apis-with-aws-api-gateway&quot;&gt;foodora/foodpanda tech blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We strongly believe that is important to keep up to date in our tech stack and be close to the tech community. Therefore foodpanda hosted the AWS User Group Berlin edition of November 2016.
At this event, we were invited to share our experience using serverless architecture with AWS API Gateway.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./building-scalable-apis-photo.jpeg&quot; alt=&quot;Foodpanda Tech speaking about AWS API Gateway&quot;&gt;&lt;/p&gt;
&lt;h2&gt;About API Gateway&lt;/h2&gt;
&lt;p&gt;There is a lot of excitement around serverless architecture and it is for a good reason, abstracting the tedious details of configuration and management of your architecture can make a lot of sense for the right application, the AWS API gateway is one of the several tools that allow you this.&lt;/p&gt;
&lt;p&gt;Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale, it handles all the tasks involved in accepting and processing up to hundreds thousands of concurrent API calls, including:&lt;/p&gt;
&lt;p&gt;Traffic management
Authorization and access control
Monitoring
API version management&lt;/p&gt;
&lt;p&gt;You pay only for the API calls you receive and the amount of data transferred out.
&lt;img src=&quot;./amazon-gateway-api-call-flow.jpg&quot; alt=&quot;Amazon API Gateway call flow&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Reasons to choose API Gateway&lt;/h2&gt;
&lt;p&gt;Speed and reduced infrastructure footprint are the 2 biggest reasons to choose to use API Gateway. When you choose API gateway all the servers, security, scaling and monitoring are managed for you.&lt;/p&gt;
&lt;p&gt;The API gateway is designed for the developer who wants to quickly build APIs while reducing the cross team developing efforts and increase the time to market for your applications.&lt;/p&gt;
&lt;p&gt;Good for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Greenfield projects&lt;/li&gt;
&lt;li&gt;Building MVP to quickly gauge customer interest&lt;/li&gt;
&lt;li&gt;Fast&lt;/li&gt;
&lt;li&gt;Minimal backend investment&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Reasons NOT to choose API Gateway&lt;/h2&gt;
&lt;p&gt;Since servers, security, scaling and monitoring are managed for you this means also that you don’t have many inputs of how those features are fulfilled. If your application has a unique constraint that can’t be fulfilled with the managed services, API Gateway may not be a good fit.&lt;/p&gt;
&lt;p&gt;E.g.: If your application has the requirement of provide audit logs from the underlying hosting services, or, if you are in a specific security environment that does not allow hosted services.&lt;/p&gt;
&lt;p&gt;If your organization has a strong, proven infrastructure and a DevOps organization that can provide similar services, introducing a new technology might not be good.&lt;/p&gt;
&lt;h2&gt;Code and slides&lt;/h2&gt;
&lt;p&gt;The code samples are available on &lt;a href=&quot;https://github.com/vitorreis/aws-examples&quot;&gt;GitHub&lt;/a&gt; and &lt;a href=&quot;https://docs.google.com/presentation/d/1E2r8cTIDqU2utB1UjRL08-j6GYefNVwVi_HMegpf1dA/edit&quot;&gt;slides on google docs&lt;/a&gt;.&lt;/p&gt;</content:encoded></item></channel></rss>