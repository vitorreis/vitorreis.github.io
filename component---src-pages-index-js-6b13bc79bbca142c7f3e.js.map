{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","filter","_ref","node","fields","langKey","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","frontmatter","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery"],"mappings":"0NAQMA,4FACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAClCC,OAAO,SAAAC,GAAA,MAAsC,OAAtCA,EAAGC,KAAgBC,OAAOC,UAEpC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUlB,KAAKC,MAAMiB,SAAUb,MAAOH,GAC5CY,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKd,MAAM,cACXS,EAAAC,EAAAC,cAACI,EAAA,EAAD,MACCd,EAAMe,IAAI,SAAAC,GAAc,IAAXX,EAAWW,EAAXX,KACNN,EAAQM,EAAKY,YAAYlB,OAASM,EAAKC,OAAOY,KACpD,OACEV,EAAAC,EAAAC,cAAA,OAAKS,IAAKd,EAAKC,OAAOY,MACpBV,EAAAC,EAAAC,cAAA,MACEU,MAAO,CACLC,aAAcC,YAAO,OAGvBd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMH,MAAO,CAAEI,UAAS,QAAYC,GAAIpB,EAAKC,OAAOY,MACjDnB,IAGLS,EAAAC,EAAAC,cAAA,aAAQL,EAAKY,YAAYS,MACzBlB,EAAAC,EAAAC,cAAA,KACEiB,wBAAyB,CACvBC,OAAQvB,EAAKY,YAAYY,aAAexB,EAAKyB,mBA3BvCC,IAAMC,WAsCfzC,YAER,IAAM0C,EAAS","file":"component---src-pages-index-js-6b13bc79bbca142c7f3e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n      .filter(({ node }) => node.fields.langKey === 'en')\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}